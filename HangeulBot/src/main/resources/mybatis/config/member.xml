<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="member"> 
	<resultMap type="hangeulbotMemberVO" id="hbmvoRM">
 		<result property="memberEmailId" column="member_email_id"/>
 		<result property="memberPassword" column="member_password"/>
 		<result property="memberName" column="member_name"/>
 		<result property="memberRegistDate" column="member_regist_date"/>
 		<result property="memberBabyName" column="member_baby_name"/>
 		<result property="memberBabyBirthDate" column="member_baby_birthday"/>
 		<result property="memberBabySex" column="member_baby_sex"/>
 		<result property="memberBabyGrade" column="member_baby_grade"/>
 		<result property="memberBabyTotalStudyTime" column="member_baby_total_study_time"/>
 	</resultMap>
	<resultMap type="hangeulbotWordVO" id="hbwvoRM">
 		<result property="midCategoryId" column="mid_category_id"/>
 		<result property="wordId" column="word_id"/>
 		<result property="word" column="word"/>
 		<result property="wordGrade" column="word_grade"/>
 	</resultMap>
 	
 	<!-- 용호 작성 쿼리 -->
	<!-- 회원(+아이) 정보 삽입 -->
	<insert id="registMember" parameterType="hangeulbotMemberVO">
		insert into hangeulbot_member (member_email_id, member_password, member_name, member_regist_date,
		member_baby_name, member_baby_birthday, member_baby_sex)
		values (#{memberEmailId}, #{memberPassword}, #{memberName},  sysdate ,#{memberBabyName},#{memberBabyBirthDate}, #{memberBabySex})
	</insert>
	<!-- 이메일과 일치하는 회원정보 select(login) -->
	<select id="getMemberInfoByEmailId" resultMap="hbmvoRM">
		select member_email_id, member_password, member_name, to_char(member_regist_date) as member_regist_date, member_baby_name, 
		member_baby_birthday, member_baby_sex, member_baby_grade, member_baby_total_study_time
		from hangeulbot_member
		where member_email_id = #{value}
	</select>
	<!-- 모든 wordList를 select -->
	<select id="getWordListForBabyGrade" resultMap="hbwvoRM">
		<![CDATA[
			select mid_category_id, word_id, word, word_grade
			from hangeulbot_word
			where #{value} <= word_grade and word_grade <= #{value} + 2
		]]>
	</select>
	<!-- 회원의 아이학습시간을 update -->
	<update id="updateTotalStudyTime">
		update hangeulbot_member 
		set member_baby_total_study_time = (select sum(spend_time) from hangeulbot_word_log where member_email_id = #{value})
		where member_email_id = #{value}
	</update>
	<!-- 회원의 아이 수준을 update -->
	<update id="updateMemberBabyGrade">
		update hangeulbot_member set member_baby_grade = 
		(select avg(word_grade)
		from (select hw.word_grade 
		from hangeulbot_word hw, (select word_id from hangeulbot_word_log where iscorrect = 1 and member_email_id = #{value}) hwl 
		where hw.word_id = hwl.word_id))
	</update>
	
 </mapper>

 
 	
 
 
 
 
 
 
 
 
 
 
 
 
 
















