<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="statistics"> 
	<resultMap type="hangeulbotWordLogVORM" id="hangeulbotWordLogVORM">
 		<result property="wordId" column="word_id"/>
 		<result property="memberEmailId" column="member_email_id"/>
 		<result property="spendTime" column="spend_time"/>
 		<result property="isCorrect" column="is_correct"/>
 		<result property="studyDate" column="study_date"/>
 		<result property="word" column="word"/>
 	</resultMap>
	<resultMap type="hangeulbotInitialSoundVO" id="hangeulbotInitialSoundVO">
 		<result property="initialSoundId" column="initial_sound_id"/>
 		<result property="initialSoundIndex" column="initial_sound_index"/>
 		<result property="initialSound" column="initial_sound"/>
 		
 	</resultMap>
	<resultMap type="hangeulbotVowelVO" id="hangeulbotVowelVO">
 		<result property="vowelId" column="vowel_id"/>
 		<result property="vowelIndex" column="vowel_index"/>
 		<result property="vowel" column="vowel"/>
 	</resultMap>
	<resultMap type="hangeulbotFinalConsonantVO" id="hangeulbotFinalConsonantVO">
 		<result property="finalConsonantId" column="final_consonant_id"/>
 		<result property="finalConsonantIndex" column="final_consonant_index"/>
 		<result property="finalConsonant" column="final_consonant"/>
 	</resultMap>

 	<resultMap type="hangeulbotPhonicsInitialLogVO" id="hangeulbotPhonicsInitialLogVO">
 		<result property="initialSoundId" column="initial_sound_id"/>
 		<result property="memberEmailId" column="member_email_id"/>
 		<result property="lastUpdate" column="last_update"/>
 		<result property="totalStudy" column="total_study"/>
 		<result property="totalWrongAnswer" column="total_wrong_answer"/>
 		<result property="totalCorrectAnswer" column="total_correct_answer"/>
 	</resultMap>
 	<resultMap type="hangeulbotPhonicsVowelLogVO" id="hangeulbotPhonicsVowelLogVO">
 		<result property="vowelId" column="vowel_id"/>
 		<result property="memberEmailId" column="member_email_id"/>
 		<result property="lastUpdate" column="last_update"/>
 		<result property="totalStudy" column="total_study"/>
 		<result property="totalWrongAnswer" column="total_wrong_answer"/>
 		<result property="totalCorrectAnswer" column="total_correct_answer"/>
 	</resultMap>
 	
 	<resultMap type="hangeulbotPhonicsFinalLogVO" id="hangeulbotPhonicsFinalLogVO">
 		<result property="finalConsonantId" column="final_consonant_id"/>
 		<result property="memberEmailId" column="member_email_id"/>
 		<result property="lastUpdate" column="last_update"/>
 		<result property="totalStudy" column="total_study"/>
 		<result property="totalWrongAnswer" column="total_wrong_answer"/>
 		<result property="totalCorrectAnswer" column="total_correct_answer"/>
 	</resultMap>
 	
 	<!-- 준영 작성 쿼리 -->
 	<select id="selectAvgSpendTimeByAge" resultType="Integer">
 		select AVG(spend_time) from( 
 		select hwl.spend_time as spend_time
 		from hangeulbot_word_log hwl, hangeulbot_member hm
 		where hwl.word_id =  #{wordId} and to_char(hm.member_baby_birthday,'yyyy') 
		= (select to_char(member_baby_birthday,'yyyy') from hangeulbot_member where member_email_id = #{memberEmailId} )
		)
 	</select>
	<!-- 아이의 학습 정보를 로그형태로 저장 -->
	<insert id="insertWordLogInfo">
		insert into hangeulbot_word_log (word_id,member_email_id,spend_time,iscorrect,study_date) values (#{wordId},#{memberEmailId},#{spendTime},#{isCorrect},sysdate)
	</insert>
	<!-- 초중종성 분리하여 학습 로그 기록 -->
	<update id="updatePhonicsInitialLog">
		update Hangeulbot_phonics_initial_log set last_update = sysdate , total_study = total_study+1 , total_wrong_answer = total_wrong_answer+#{totalWrongAnswer},
		total_correct_answer = total_correct_answer+#{totalCorrectAnswer} where initial_sound_id = #{initialSoundId} and member_email_id = #{memberEmailId}
	</update>
	<update id="updatePhonicsVowelLog">
		update Hangeulbot_phonics_vowel_log set last_update = sysdate, total_study = total_study+1 , total_wrong_answer = total_wrong_answer+#{totalWrongAnswer},
		total_correct_answer = total_correct_answer+#{totalCorrectAnswer} where vowel_id = #{vowelId} and member_email_id = #{memberEmailId}
	</update>
	<update id="updatePhonicsFinalLog">
		update Hangeulbot_phonics_final_log set last_update = sysdate , total_study = total_study+1 , total_wrong_answer = total_wrong_answer+#{totalWrongAnswer},
		total_correct_answer = total_correct_answer+#{totalCorrectAnswer} where final_consonant_id = #{finalConsonantId} and member_email_id = #{memberEmailId}
	</update>
	<!-- 끝 -->
	<!-- 초중종성 분리하여 학습 로그 삽입 -->
	<insert id = "insertPhonicsInitialLog">
		insert into Hangeulbot_phonics_initial_log (initial_sound_id,member_email_id,last_update,total_study,total_wrong_answer,total_correct_answer) values
		(#{initialSoundId},#{memberEmailId},sysdate,1,#{totalWrongAnswer},#{totalCorrectAnswer})
	</insert>
	<insert id = "insertPhonicsVowelLog">
		insert into Hangeulbot_phonics_vowel_log (vowel_id,member_email_id,last_update,total_study,total_wrong_answer,total_correct_answer) values
		(#{vowelId},#{memberEmailId},sysdate,1,#{totalWrongAnswer},#{totalCorrectAnswer})
	</insert>
	<insert id = "insertPhonicsFinalLog">
		insert into Hangeulbot_phonics_final_log (final_consonant_id,member_email_id,last_update,total_study,total_wrong_answer,total_correct_answer) values
		(#{finalConsonantId},#{memberEmailId},sysdate,1,#{totalWrongAnswer},#{totalCorrectAnswer})
	</insert>
	<select id="selectTotalStudyWordCount" resultType="Integer">
		select count(*) from hangeulbot_word_log where member_email_id = #{value}
	</select>
	<select id="selectTotalCorrectWordCount" resultType="Integer">
		select count(*) from hangeulbot_word_log where member_email_id = #{value} and iscorrect = 1
	</select>
	<!-- 한 회원이 최근일주일간 학습한학습한 총 단어 수를 출력(로그 기준) -->
	<select id="selectCurrentStudyWordCount" resultType="Integer">
		<![CDATA[
		select count(*) from hangeulbot_word_log where member_email_id = #{value} and study_date >= to_char(sysdate-7,'yyyymmdd')
		]]>
	</select>
	<!-- 한 회원이 최근 일주일간 학습한 총 단어 중 오답 갯수를 출력(로그 기준) -->
	<select id="selectCurrentWrongWordCount" resultType="Integer">
		<![CDATA[
		select count(*) from hangeulbot_word_log where member_email_id = #{value} and study_date >= to_char(sysdate-7,'yyyymmdd') and iscorrect = 0
		]]>
	</select>
	<!-- 회원의 학습 기록을 8개씩 출력 -->
	<select id="selectListStudyWordLog" resultMap="hangeulbotWordLogVORM">
		select word_id,spend_time,iscorrect,word,to_char(study_date,'yyyy-mm-dd') as study_date
			from(
				select ceil(rownum/8) as page , word_id,spend_time,iscorrect,word, study_date as study_date
				from(
					select hwl.word_id as word_id ,hwl.spend_time as spend_time,hwl.iscorrect as iscorrect,hw.word as word,hwl.study_date as study_date
					from hangeulbot_word_log hwl,hangeulbot_word hw
					where hwl.word_id = hw.word_id and hwl.member_email_id = #{value} order by hwl.study_date desc
				)
			)
		where page = 1
	</select>	
	<!-- 회원의 학습 기록을 8개씩 출력(페이징용) -->
	<select id="selectListStudyWordLogByPaging" resultMap="hangeulbotWordLogVORM">
		select word_id,spend_time,iscorrect,word,to_char(study_date,'yyyy-mm-dd') as study_date
			from(
				select ceil(rownum/8) as page , word_id,spend_time,iscorrect,word, study_date as study_date
				from(
					select hwl.word_id as word_id ,hwl.spend_time as spend_time,hwl.iscorrect as iscorrect,hw.word as word,hwl.study_date as study_date
					from hangeulbot_word_log hwl,hangeulbot_word hw
					where hwl.word_id = hw.word_id and hwl.member_email_id = #{memberEmailId} order by hwl.study_date desc
				)
			)
		where page = #{page}
	</select>	
	<select id="selectWordCountByCategory" parameterType="HashMap" resultType="Integer">
		select count(*)
		from hangeulbot_word_log hwl, hangeulbot_mid_category hmc, hangeulbot_word hw
		where hwl.member_email_id = #{memberEmailId} and hwl.word_id = hw.word_id and hw.mid_category_id = hmc.mid_category_id and hmc.mid_category = #{studyWordCategory}
	</select>
	<select id="selectListStudyWordCategoryList" resultType="String" parameterType="String">
		select distinct hmc.mid_category as mid_category
		from hangeulbot_word_log hwl, hangeulbot_mid_category hmc, hangeulbot_word hw
		where hwl.member_email_id = #{value} and hwl.word_id = hw.word_id and hw.mid_category_id = hmc.mid_category_id
	</select>
	
	<select id="selectCountTotalWordByGrade" resultType="Integer">
		select count(*)
		from hangeulbot_word_log hwl,hangeulbot_word hw
		where hwl.member_email_id = #{memberEmailId} and hwl.word_id = hw.word_id and hw.word_grade = #{grade}
	</select>
	
	<select id="selectCountTotalCorrectWordByGrade" resultType="Integer">
		select count(*)
		from hangeulbot_word_log hwl,hangeulbot_word hw
		where hwl.member_email_id = #{memberEmailId} and hwl.word_id = hw.word_id and hw.word_grade = #{grade} and hwl.iscorrect = 1
	</select>

	<select id="selectListInitialSound" resultMap="hangeulbotInitialSoundVO">
		select * from hangeulbot_initial_sound
	</select>
	<select id="selectListVowel" resultMap="hangeulbotVowelVO">
		select * from hangeulbot_vowel
	</select>
	<select id="selectListFinalConsonant" resultMap="hangeulbotFinalConsonantVO">
		select * from hangeulbot_final_consonant
	</select>
	
	<select id="selectInitialSoundLog" resultMap="hangeulbotPhonicsInitialLogVO">
		select * from hangeulbot_phonics_initial_log where member_email_id = #{memberEmailId} and initial_sound_id = #{initialSoundId}
	</select>
	<select id="selectVowelLog" resultMap="hangeulbotPhonicsVowelLogVO">
		select * from hangeulbot_phonics_vowel_log where member_email_id = #{memberEmailId} and vowel_id = #{vowelId}
	</select>
	<select id="selectFinalLog" resultMap="hangeulbotPhonicsFinalLogVO">
		select * from hangeulbot_phonics_final_log where member_email_id = #{memberEmailId} and final_consonant_id = #{finalConsonantId}
	</select>
	<select id="selectAvgAnswerRateByAge" resultType="Integer">
	select ceil((sum(iscorrect)/max(rownum))*100) as answerRate
		from(
		select hm.member_email_id,hw.word,hwl.iscorrect as iscorrect,rownum
		from hangeulbot_member hm , HANGEULBOT_WORD_LOG hwl,hangeulbot_word hw
		where hw.word_id = hwl.word_id and hm.member_email_id = hwl.member_email_id and to_char(hm.member_baby_birthday,'yyyy') 
		= (select to_char(member_baby_birthday,'yyyy') from hangeulbot_member where member_email_id = #{memberEmailId} )
		and hw.word_grade = #{grade})
	</select>
	
	<select id="selectAnswerRateTendencyByWeek" resultType="HashMap" >
	<![CDATA[
		select nvl(answerRate , '0') as answerRate,standardDate from(
			select ceil((sum(iscorrect)/max(rownum))*100) as answerRate ,to_char(sysdate-(7*#{week}),'yyyy-mm-dd') as standardDate
			from(
				select hwl.member_email_id,hw.word,hwl.iscorrect as iscorrect,rownum 
				from hangeulbot_member hm , HANGEULBOT_WORD_LOG hwl,hangeulbot_word hw
				where hw.word_id = hwl.word_id and hwl.member_email_id = #{memberEmailId}
				and  to_char(study_date,'yyyymmdd') >= to_char(sysdate-(7*(#{week}+1)),'yyyymmdd') and to_char(study_date,'yyyymmdd') <= to_char(sysdate-(7*#{week}),'yyyymmdd')
			)
		)
		
	]]>
		</select>
	<!-- 준영 작성 쿼리 끝 -->


	
	
	<!-- 용호 작성 쿼리 -->
	<select id="getMemberBabyTotalStudyTime" resultType="Integer">
		select member_baby_total_study_time from hangeulbot_member where member_email_id = #{value}
	</select>
	<select id="getDailyAverageStudyWord" resultType="Integer">
		select avg(study_word_count) 
		from (select to_char(study_date, 'yyyy-mm-dd'), count(*) as study_word_count 
			from hangeulbot_word_log 
			where member_email_id = #{value} 
			group by to_char(study_date, 'yyyy-mm-dd'))
	</select>
	<select id="getDailyAverageStudyTime" resultType="Integer">
		select avg(study_time) 
		from (select to_char(study_date, 'yyyy-mm-dd'), sum(spend_time) as study_time 
			from hangeulbot_word_log 
			where member_email_id = #{value} 
			group by to_char(study_date, 'yyyy-mm-dd'))
	</select>
	<!-- 용호 작성 쿼리 끝-->
 </mapper>


